import de.geeksfactory.opacclient.gradle.JsonFilesTask

apply plugin: 'com.android.application'

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "de.geeksfactory.opacclient"
        minSdkVersion 15
        targetSdkVersion 33
        versionCode 245
        versionName "6.5.0"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile file("../../release.keystore")
            storePassword System.getenv("KSTOREPWD")
            keyAlias "opac client"
            keyPassword System.getenv("KSTOREPWD")
        }
    }

    // load Sentry configuration from sentry.properties file, if it exists
    def sentryProps = new Properties()
    def sentryPropsFile = project.rootProject.file("sentry.properties")
    String dsn = null;
    if (sentryPropsFile.exists()) {
        sentryProps.load(sentryPropsFile.newDataInputStream())
        dsn = sentryProps.getProperty("dsn")
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles 'proguard-rules.txt'
            buildConfigField("String", "SENTRY_DSN", dsn != null ? "\"$dsn\"" : "null")
        }
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            buildConfigField("String", "SENTRY_DSN", "null")
        }
    }

    flavorDimensions "dependencies"
    productFlavors {
        googlePlayServices {
            dimension "dependencies"
        }
        foss {
            dimension "dependencies"
        }
    }

    lintOptions {
        // disable 'AndroidLintRtlHardcoded' // Throws an "Unknown issue id" for me
        disable 'MissingTranslation', 'UnusedAttribute'
        warning 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        encoding 'UTF-8'
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }

    useLibrary 'org.apache.http.legacy'
    useLibrary 'android.test.mock'

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    implementation(project(':libopac')) {
        transitive = false
    }

// Local
    // We don't want to rely on the CommonsWare Maven repo, so we include these libraries as JARs
    implementation files('libs/adapter-1.0.1.jar')
    implementation files('libs/endless-1.2.3.jar')

// Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.7.10'

// AndroidX
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

// Other
    implementation 'io.sentry:sentry-android-core:2.2.0'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'org.apmem.tools:layouts:1.10@aar'
    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    implementation 'joda-time:joda-time:2.10.6'
    implementation 'su.j2e:rv-joiner:1.0.9'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.9.1'
    implementation 'com.squareup.retrofit2:retrofit:2.6.4'
    implementation 'com.squareup.retrofit2:converter-moshi:2.6.4'
    implementation 'com.samskivert:jmustache:1.15'
    implementation 'com.github.johan12345:material-intro:a7791652d9'
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.5.0@aar'
    implementation 'net.sourceforge.streamsupport:streamsupport-cfuture:1.7.2'

// Flavor
    googlePlayServicesImplementation 'com.google.android.gms:play-services-basement:17.6.0'

// Debug
    debugImplementation 'com.facebook.flipper:flipper:0.162.0'
    debugImplementation 'com.facebook.soloader:soloader:0.10.4'
    debugImplementation 'com.facebook.flipper:flipper-network-plugin:0.162.0'
    releaseImplementation 'com.facebook.flipper:flipper-noop:0.139.0'

// Testing
    testImplementation 'org.mockito:mockito-core:3.8.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.squareup.okhttp3:okhttp:4.9.1'
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.6.4'
    testImplementation 'commons-io:commons-io:2.7'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'org.robolectric:robolectric:4.5.1'
    testImplementation 'org.mockito:mockito-inline:3.8.0'
}

task downloadJson(type: JsonFilesTask)

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn downloadJson
    }
}
